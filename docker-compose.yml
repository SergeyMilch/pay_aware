services:
  postgres:
    image: postgres:17-alpine
    container_name: pay_aware_postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pay_aware_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: pay_aware_redis
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"] # Добавлена команда для установки пароля
    networks:
      - pay_aware_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: pay_aware_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - pay_aware_network
    healthcheck:
      test:
        [
          "CMD",
          "echo",
          "ruok",
          "|",
          "nc",
          "localhost",
          "2181",
          "|",
          "grep",
          "imok",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: bitnami/kafka:latest
    container_name: pay_aware_kafka
    restart: always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_LISTENERS: ${KAFKA_LISTENERS}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - pay_aware_network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  elasticsearch:
    image: bitnami/elasticsearch:8.2.0
    container_name: pay_aware_elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms256m -Xmx256m # Ограничение использования памяти
    volumes:
      - es_data:/bitnami/elasticsearch/data
    networks:
      - pay_aware_network

  kibana:
    image: bitnami/kibana:8.2.0
    container_name: pay_aware_kibana
    depends_on:
      - elasticsearch
    networks:
      - pay_aware_network

  logstash:
    image: bitnami/logstash:8.2.0
    container_name: pay_aware_logstash
    volumes:
      - ./logstash.conf:/bitnami/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch
    networks:
      - pay_aware_network

  app:
    image: ${DOCKER_USERNAME}/pay_aware_app:latest
    container_name: pay_aware_app
    restart: always
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      REDIS_ADDR: ${REDIS_ADDR}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      KAFKA_BROKER: ${KAFKA_BROKER}
      KAFKA_TOPIC: ${KAFKA_TOPIC}
      JWT_SECRET: ${JWT_SECRET}
      LOGSTASH_ADDR: ${LOGSTASH_ADDR}
    depends_on:
      - postgres
      - redis
      - kafka
      - logstash
    ports:
      - "8000:8000"
    networks:
      - pay_aware_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # frontend:
  #   build:
  #     context: ./subscription-manager
  #     dockerfile: Dockerfile
  #   container_name: pay_aware_frontend
  #   ports:
  #     - "19000:19000" # Порт для сервера разработки Expo
  #     - "19001:19001" # Порт для отладки
  #     - "19002:19002" # Порты для работы с устройствами
  #     - "19006:19006"
  #   environment:
  #     REACT_NATIVE_PACKAGER_HOSTNAME: "0.0.0.0"
  #     # CI: "true" # Устанавливаем переменную CI=true, чтобы избежать интерактивного режима
  #   depends_on:
  #     - app
  #   networks:
  #     - pay_aware_network

  nginx:
    image: nginx:latest
    container_name: pay_aware_nginx
    ports:
      - "443:443" # HTTPS
      - "80:80" # HTTP для редиректа на HTTPS
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /root/ssl-cert:/etc/ssl/private:ro # Папка с сертификатами
    depends_on:
      - app
    networks:
      - pay_aware_network

networks:
  pay_aware_network:
    driver: bridge

volumes:
  postgres_data:
  es_data:
